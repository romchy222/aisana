#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞–º–∏
"""

import logging
from app import create_app, db
from agents import AgentRouter

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_contact_info_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∞–≥–µ–Ω—Ç–æ–≤ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    
    # –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –∞–≥–µ–Ω—Ç–æ–≤
    router = AgentRouter()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    test_queries = [
        "–∫–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–º",
        "—Ç–µ–ª–µ—Ñ–æ–Ω –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏", 
        "–∞–¥—Ä–µ—Å —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞",
        "–∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–µ–∫–∞–Ω–∞—Ç–∞",
        "—á–∞—Å—ã —Ä–∞–±–æ—Ç—ã —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞"
    ]
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
    print("=" * 60)
    
    for query in test_queries:
        print(f"\nüìû –ó–∞–ø—Ä–æ—Å: '{query}'")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç —Ä–æ—É—Ç–µ—Ä–∞
            result = router.route_message(query, 'ru')
            
            print(f"ü§ñ –ê–≥–µ–Ω—Ç: {result.get('agent_name', 'Unknown')}")
            print(f"üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result.get('confidence', 0):.2f}")
            print(f"üìö –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω: {result.get('context_used', False)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –æ—Ç–≤–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            response = result.get('response', '')
            has_phone = any(phone in response for phone in ['+7 (7242) 123-456', '+7 (7242) 123-457', '+7 (7242) 123-458'])
            has_address = '–º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω –õ–µ–≤—ã–π –ë–µ—Ä–µ–≥, 111 –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∫–æ—Ä–ø—É—Å' in response
            has_email = any(email in response for email in ['info@bolashak.kz', 'admission@bolashak.kz'])
            
            print(f"üìû –°–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–ª–µ—Ñ–æ–Ω: {'‚úÖ' if has_phone else '‚ùå'}")
            print(f"üìç –°–æ–¥–µ—Ä–∂–∏—Ç –∞–¥—Ä–µ—Å: {'‚úÖ' if has_address else '‚ùå'}")
            print(f"üìß –°–æ–¥–µ—Ä–∂–∏—Ç email: {'‚úÖ' if has_email else '‚ùå'}")
            
            if has_phone or has_address or has_email:
                print("‚úÖ –£–°–ü–ï–•: –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –∞–≥–µ–Ω—Ç—É!")
            else:
                print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ—Ç–≤–µ—Ç–µ")
                print(f"–û—Ç–≤–µ—Ç: {response[:200]}...")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        
        print("-" * 40)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    with create_app().app_context():
        logger.info("–ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...")
        
        try:
            test_contact_info_access()
            logger.info("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)}")
            raise

if __name__ == "__main__":
    main()